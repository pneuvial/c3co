% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/c3co.R
\name{c3co}
\alias{c3co}
\title{Cancer subclone Inference function}
\usage{
c3co(dat, lambda1.grid = NULL, lambda2.grid = NULL,
  nb.arch.grid = 2:(length(dat) - 1), stat = "C1C2", saveResults = FALSE,
  pathSeg = NULL, output.dir = "results_c3co", init.random = FALSE,
  new.getZ = TRUE)
}
\arguments{
\item{dat}{A list of data frame for each patient. Data frame containing 
\describe{
  \item{tcn}{Total copy number}
  \item{dh}{Mirrored B allele fraction}
  \item{pos}{Position on the genome}
  \item{chr}{Chromosome}
  }}

\item{lambda1.grid, lambda2.grid}{A grid of real numbers which is the penalty coefficients for the fused lasso on the minor and major copy number dimension}

\item{nb.arch.grid}{A vector of integers which is the number of archetypes in the model}

\item{stat}{TCN or C1C2}

\item{saveResults}{By default \code{FALSE}, set parameter to TRUE if you want to save results in directory \code{output.dir}}

\item{pathSeg}{By default \code{NULL} if it is not \code{NULL} assuming that \code{fileSeg="segData.rds"} already exists in \code{pathSeg} and load segmentation.}

\item{output.dir}{Name of directory to save segmentation and feature data if \code{saveResults} is set to \code{TRUE}}

\item{init.random}{\code{TRUE} or \code{FALSE} by defaut \code{FALSE}. Initialization done by clustering}

\item{new.getZ}{\code{TRUE} if you want to parallelize inferrence of Minor and Major copy numbers (TRUE by default)}
}
\value{
An object of class [\code{\linkS4class{c3coFit}}]
}
\description{
Cancer subclone Inference function
}
\examples{
dataAnnotTP <- acnr::loadCnRegionData(dataSet="GSE11976", tumorFrac=1)
dataAnnotN <- acnr::loadCnRegionData(dataSet="GSE11976", tumorFrac=0)
len <- 500*10
nbClones <- 3
bkps <- list(c(100,250)*10, c(150,400)*10,c(150,400)*10)
regions <-list(c("(0,3)", "(0,2)","(1,2)"), 
c("(1,1)", "(0,1)","(1,1)"), c("(0,2)", "(0,1)","(1,1)"))
datSubClone <- buildSubclones(len, dataAnnotTP, dataAnnotN, nbClones, bkps, regions)
M <- getWeightMatrix(100,0, 3, 15, sparse.coeff=0.7, contam.coeff=0.6, contam.max=2)
dat <- mixSubclones(subClones=datSubClone, M)
l1 <- seq(from=1e-6, to=1e-5, length=3)
l2 <- seq(from=1e-6, to=1e-5, length=3)
casResC1C2 <- c3co(dat, lambda1.grid=l1, lambda2.grid=l2, nb.arch.grid=2:6)
casRes <- c3co(dat, stat="TCN", lambda1.grid=l1, lambda2.grid=l2, nb.arch.grid=2:6)
}
