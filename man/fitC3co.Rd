% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitC3co.R
\name{fitC3co}
\alias{fitC3co}
\title{c3co estimation from segment-level copy number data}
\usage{
fitC3co(Y1, Y2 = NULL, parameters.grid = NULL, init.random = FALSE,
  new.getZ = TRUE, verbose = FALSE)
}
\arguments{
\item{Y1}{A numeric n x S matrix, segment-level minor copy numbers. n is the
number of samples and S the number of segments}

\item{Y2}{An optional numeric n x S matrix, segment-level major copy
numbers. If \code{NULL}, the model is estimated on Y1 only}

\item{parameters.grid}{A list composed of two vectors named \code{lambda1}
and \code{lambda2} of real numbers which are the penalty coefficients for
the fused lasso on the minor and major copy number dimension and a vector
named \code{nb.arch} of integers which is the number of archetypes in the
model}

\item{init.random}{\code{TRUE} or \code{FALSE} by defaut \code{FALSE}.
Initialization done by clustering}

\item{new.getZ}{\code{TRUE} if you want to parallelize inferrence of Minor
and Major copy numbers (TRUE by default)}

\item{verbose}{A logical value indicating whether to print extra
information. Defaults to FALSE}
}
\value{
An object of class [\code{\linkS4class{c3coFit}}]
}
\description{
Estimate c3co model parameters from segment-level copy number data
}
\examples{

dataAnnotTP <- acnr::loadCnRegionData(dataSet="GSE11976", tumorFrac=1)
dataAnnotN <- acnr::loadCnRegionData(dataSet="GSE11976", tumorFrac=0)
len <- 500*10
nbClones <- 3
bkps <- list(c(100,250)*10, c(150,400)*10,c(150,400)*10)
regions <-list(c("(0,3)", "(0,2)","(1,2)"),
c("(1,1)", "(0,1)", "(1,1)"), c("(0,2)", "(0,1)","(1,1)"))
datSubClone <- buildSubclones(len, dataAnnotTP, dataAnnotN, nbClones, bkps, regions)
M <- getWeightMatrix(100, 0, 3, 15, sparse.coeff=0.7, contam.coeff=0.6, contam.max=2)
dat <- mixSubclones(subClones=datSubClone, M)
seg <- segmentData(dat)

l1 <- seq(from=1e-6, to=1e-5, length=3)
l2 <- seq(from=1e-6, to=1e-5, length=3)
parameters.grid <- list(lambda1=l1, lambda2=l2, nb.arch=2:6)
fitList <- fitC3co(t(seg$Y1), t(seg$Y2), parameters.grid=parameters.grid)
fitListC <- fitC3co(t(seg$Y), parameters.grid=parameters.grid)

}
