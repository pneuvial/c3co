% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/positiveFusedLasso.R
\name{positiveFusedLasso}
\alias{positiveFusedLasso}
\title{Positive fused lasso function}
\usage{
positiveFusedLasso(Y, Z, lambda, eps = 0.1, max.iter = 50, warn = FALSE,
  verbose = FALSE)
}
\arguments{
\item{Y}{A list of one or two matrices named Y1 and Y2 containing the segmented minor 
(and possibly the major) copy number 
(\code{n} patients in row and \code{L} segments in columns)}

\item{Z}{A list of one or two \code{L} x \code{p} matrices names Z1 and Z2 containing the \code{L}
minor (and possibly the major) copy numbers of the \code{p} initial 
latent feature estimates}

\item{lambda}{A numeric with one or two real numbers, the coefficients for the fused penalty
for minor (and possibly the major) copy numbers}

\item{eps}{criterion to stop algorithm (when W do not change
sqrt(sum((W-W.old)^2) < eps)}

\item{max.iter}{maximum number of iterations of the algorithm}

\item{warn}{issue a warning if Z1 <= Z2 is not always satisfied?
Defaults to FALSE}

\item{verbose}{if you want to print some information during running}
}
\value{
An object of class [\code{\linkS4class{posFused}}]
}
\description{
Positive fused lasso function
}
\examples{
len <- 700*10
nbClones <- 2
bkps <- list(
    c(20, 30, 50, 60)*100, 
    c(10, 40, 60)*100)
regions <- list(
    c("(1,1)", "(1,2)", "(1,1)", "(0,1)", "(1,1)"),
    c("(0,1)", "(1,1)", "(1,2)", "(1,1)"))

datSubClone <- buildSubclones(len, nbClones, bkps, regions, eps=0.2)
W <-  rSparseWeightMatrix(5, nbClones, 0.7)
datList <- mixSubclones(subClones=datSubClone, W)

segData.TCN  <- segmentData(datList,"TCN")
Y1 <- t(segData.TCN$Y)
Y <- list(Y1 = Y1)
Z0.TCN <- initializeZ(Y1, p = 2, flavor = "nmf")
Z <- list(Z1 = Z0.TCN$Z1)
posFused <- positiveFusedLasso(Y, Z, 1e-3, verbose=TRUE)
posFused 

segData.C1C2 <- segmentData(datList,"C1C2")
Y1 <- t(segData.C1C2$Y1)
Y2 <- t(segData.C1C2$Y2)
Y <- list(Y1 = Y1, Y2 = Y2)
Z0.C1C2 <- initializeZ(Y1, Y2, p=2, flavor = "nmf")
Z <- list(Z1 = Z0.C1C2$Z1,Z2 = Z0.C1C2$Z2)
posFusedC <- positiveFusedLasso(Y, Z, c(1e-3, 1e-3), verbose=TRUE)
posFusedC

}
