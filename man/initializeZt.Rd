% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/initializeZt.R
\name{initializeZt}
\alias{initializeZt}
\title{Initialization of the latent features of the c3co model}
\usage{
initializeZt(Y1, Y2 = NULL, K = min(dim(Y1)), flavor = c("hclust",
  "nmf", "archetypes", "svd", "subsampling"), stat = c("C1+C2", "C1",
  "C2"), forceNormal = FALSE, verbose = FALSE)
}
\arguments{
\item{Y1}{A matrix containing the segmented minor copy number
(n patients in rows and J segments in columns).}

\item{Y2}{A matrix containing the segmented major copy number
(n patients in rows and J segments in columns).}

\item{K}{An integer value, the number of latent features in the model.
Defaults to \code{min(dim(Y1))}.}

\item{flavor}{A character value specifying how initialization is performed.
Defaults to \link[stats:hclust]{stats::hclust}. See Details.}

\item{stat}{Statistic used to perform initialization. Should be either
\code{"C1+C2"}, \code{"C1"}, or \code{"C2"}.}

\item{forceNormal}{A logical value indicating whether a normal component
is forced in initialization.  Defaults to \code{FALSE}.}

\item{verbose}{A logical value indicating whether to print extra information.
Defaults to \code{FALSE}.}
}
\value{
A list with two components:
\describe{
\item{\code{Z1}}{An J-by-\code{K} matrix, the initial value for the J minor
copy numbers of the \code{K} latent features}
\item{\code{Z2}}{An J-by-\code{K} matrix, the initial value for the J major
copy numbers of the \code{K} latent features}
}
\emph{Warning}: Note that the \code{Z1} and \code{Z2} components are actually the
transposed version of those matrices.  This notation mistake will be
fixed in a future release.
}
\description{
Initialization of the latent features of the c3co model
}
\details{
The latent features are inferred as follows according to the
value of argument \code{flavor}:

If \code{flavor == "hclust"} (default), the latent features are centers of clusters
derived by hierarchical agglomerative clustering on the Euclidean distance
between the input copy number profiles, and using Ward linkage
(\code{\link[stats:hclust]{stats::hclust()}}).

If \code{flavor == "nmf"}, the latent features are the \emph{coefficients} of the non-negative
matrix factorization in \code{K} of the input copy number profiles.

If \code{flavor == "svd"}, the latent features are the first \code{K} right singular
vectors of the singular value decomposition of the input copy number
profiles. The flavor is not recommended as it may produce matrices
with non-positive entries

If  \code{flavor == "archetypes"}, the latent features are defined using archetypal
analysis.

If  \code{flavor == "subsampling"}, the latent features are chosen at random among existing
profiles.
}
\examples{
## Simulate locus-level (C1,C2) copy-number data
dataAnnotTP <- acnr::loadCnRegionData(dataSet="GSE11976", tumorFrac=1)
dataAnnotN <- acnr::loadCnRegionData(dataSet="GSE11976", tumorFrac=0)
len <- 500*10  ## Number of loci
K <- 3L        ## Number of subclones
n <- 12L       ## Number of samples
bkps <- list(c(100, 250)*10, c(150, 400)*10, c(150, 400)*10)
regions <- list(c("(0,3)", "(0,1)", "(1,2)"),
                c("(1,1)", "(0,1)", "(1,1)"),
                c("(0,2)", "(0,1)", "(1,1)"))
datSubClone <- buildSubclones(len=len, nbClones=K, bkps=bkps, regions=regions,
                              dataAnnotTP=dataAnnotTP, dataAnnotN=dataAnnotN)
W <- rSparseWeightMatrix(nb.samp=n, nb.arch=K, sparse.coeff=0.90)
simu <- mixSubclones(subClones=datSubClone, W=W)

## Segment the copy-number data
seg <- segmentData(simu)

## Initialize C3CO model
Y1 <- t(seg$Y1)
Y2 <- t(seg$Y2)

resH <- initializeZt(Y1, Y2, K=K)  ## corresponds to flavor "hclust")
resNMF <- initializeZt(Y1, Y2, K=K, flavor="nmf")
\dontrun{
## often fails because of singularities:
resArch <- initializeZt(Y1, Y2, K=K, flavor="archetypes")
}
resSVD <- initializeZt(Y1, Y2, K=K, flavor="svd")
resC <- initializeZt(Y1, Y2, K=K, flavor="subsampling")

resNMF1 <- initializeZt(Y1, K=K, flavor="nmf")

}
\references{
Gaujoux R and Seoighe C (2010). A flexible R package for
nonnegative matrix factorization. BMC Bioinformatics, 11(1), pp. 367.

Cutler A and Breiman L. (1994) Archetypal analysis.
Technometrics, 36(4):338-3474.
}
