% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/c3co.R
\name{c3co}
\alias{c3co}
\alias{c3co.list}
\alias{c3co.NULL}
\title{Cancer subclone inference}
\usage{
c3co(dat, ...)

\method{c3co}{list}(dat, parameters.grid = NULL, stat = c("C1C2",
  "TCN"), segDat = NULL, ..., verbose = FALSE)

\method{c3co}{NULL}(dat, ...)
}
\arguments{
\item{dat}{A list of data frames for each patient, each of them of the form:
\describe{
\item{\code{tcn}}{Total copy number}
\item{\code{dh}}{Mirrored B allele fraction}
\item{\code{pos}}{Position on the genome}
\item{\code{chr}}{Chromosome}
}}

\item{\dots}{Further arguments to be passed to \code{\link[=fitC3co]{fitC3co()}}.}

\item{parameters.grid}{Is a list composed of : the penalty coefficients
named either \code{lambda}, \code{lambda1} and \code{lambda2}. For the model on minor and
major CN, it is possible to give two grids (one for minor CN and one for
major CN), and all combination is tested. If only one grid is given the
consider  that \code{lambda1} = \code{lambda2}.
and composed of : a vector named \code{nb.arch} of integers which is the number
of features in the model.}

\item{stat}{\code{"TCN"} or \code{"C1C2"}.}

\item{segDat}{Either a path to the file that contains segmentation
(\file{*.rds} file), by default \code{NULL}, or a file that contains segmentation
(e.g. from \code{\link[=segmentData]{segmentData()}}).}

\item{verbose}{A logical value indicating whether to print extra
information. Defaults to \code{FALSE}.}
}
\value{
An object of class \link[=c3coFit-class]{c3coFit}.
}
\description{
Cancer subclone inference
}
\examples{
dataAnnotTP <- acnr::loadCnRegionData(dataSet="GSE11976", tumorFrac=1)
dataAnnotN <- acnr::loadCnRegionData(dataSet="GSE11976", tumorFrac=0)
len <- 500*10   ## Number of loci
K <- 3L         ## Number of subclones
n <- 15L        ## Number of samples
set.seed(88)
bkps <- list(c(100, 250)*10, c(150, 400)*10, c(150, 400)*10)
regions <- list(c("(1,2)", "(0,2)", "(1,2)"),
c("(0,3)", "(0,1)", "(1,1)"), c("(0,2)", "(0,1)", "(1,1)"))
datSubClone <- buildSubclones(len=len, nbClones=K, bkps=bkps, regions=regions,
                              dataAnnotTP=dataAnnotTP, dataAnnotN=dataAnnotN)
W <- rSparseWeightMatrix(nb.samp=n, nb.arch=K, sparse.coeff=0.7)
dat <- mixSubclones(subClones=datSubClone, W=W)
l1 <- seq(from=1e-6, to=1e-4, length.out=10L)
parameters.grid <- list(lambda=l1, nb.arch=2:5)
res <- c3co(dat, parameters.grid=parameters.grid)
## FIXME: BUG: propagate NA when rank deficient
## FIXME: resC <- c3co(dat, stat="TCN", parameters.grid =parameters.grid)
}
